module attributes {dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi32>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi32>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi32>>, #dlti.dl_entry<f80, dense<128> : vector<2xi32>>, #dlti.dl_entry<i64, dense<64> : vector<2xi32>>, #dlti.dl_entry<i1, dense<8> : vector<2xi32>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi32>>, #dlti.dl_entry<i8, dense<8> : vector<2xi32>>, #dlti.dl_entry<i16, dense<16> : vector<2xi32>>, #dlti.dl_entry<i32, dense<32> : vector<2xi32>>, #dlti.dl_entry<f64, dense<64> : vector<2xi32>>, #dlti.dl_entry<f128, dense<128> : vector<2xi32>>, #dlti.dl_entry<f16, dense<16> : vector<2xi32>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i32>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-linux-gnu", "polygeist.target-cpu" = "x86-64", "polygeist.target-features" = "+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87", "polygeist.tune-cpu" = "generic"} {
  llvm.func @_Z6gatherPdS_Pii(%arg0: !llvm.ptr, %arg1: !llvm.ptr, %arg2: !llvm.ptr, %arg3: i32) {
    %0 = llvm.mlir.constant(0 : index) : i64
    %1 = llvm.mlir.constant(1 : index) : i64
    %2 = llvm.sext %arg3 : i32 to i64
    %3 = "llvm.intr.spdalloc"(%2) : (i64) -> !llvm.ptr
    %4 = llvm.mlir.constant(0 : i64) : i64
    %5 = llvm.mlir.constant(1 : i32) : i32
    %6 = "llvm.intr.maa.setloop"(%4, %2, %5) : (i64, i64, i32) -> i32
    %7 = "llvm.intr.maa.stream"(%6, %arg2) : (i32, !llvm.ptr) -> i32
    %8 = "llvm.intr.maa.indirect"(%7, %arg1) : (i32, !llvm.ptr) -> i32
    llvm.br ^bb1(%0 : i64)
  ^bb1(%9: i64):  // 2 preds: ^bb0, ^bb2
    %10 = llvm.icmp "slt" %9, %2 : i64
    llvm.cond_br %10, ^bb2, ^bb3
  ^bb2:  // pred: ^bb1
    %11 = llvm.getelementptr %3[%9] : (!llvm.ptr, i64) -> !llvm.ptr, f64
    %12 = llvm.load %11 : !llvm.ptr -> f64
    %13 = llvm.getelementptr %arg0[%9] : (!llvm.ptr, i64) -> !llvm.ptr, f64
    llvm.store %12, %13 : f64, !llvm.ptr
    %14 = llvm.add %9, %1  : i64
    llvm.br ^bb1(%14 : i64)
  ^bb3:  // pred: ^bb1
    llvm.return
  }
}

